* {
    background: #ffffff;
    font-family: candara;
}

 QComboBox {
     border: 1px solid #141414;
     border-radius: 4px;
     padding: 1px 18px 1px 3px;
     min-width: 6em;
     color: #e8e8e8;
 }

 QComboBox:editable {
    background: #5b5a5b
 }

 QComboBox:!editable, QComboBox::drop-down:editable {
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
      stop: 0 #3c3c3c, stop: 1 #262627);
 }

 /* QComboBox gets the "on" state when the popup is open */
 QComboBox:!editable:on, QComboBox::drop-down:editable:on {
     background: #5b5a5b
 }

 QComboBox:on { /* shift the text when the popup opens */
     padding-top: 3px;
     padding-left: 4px;
 }

 QComboBox::drop-down {
     subcontrol-origin: padding;
     subcontrol-position: top right;
     width: 15px;

     border-left-width: 1px;
     border-left-color: darkgray;
     border-left-style: solid; /* just a single line */
     border-top-right-radius: 3px; /* same radius as the QComboBox */
     border-bottom-right-radius: 3px;
     selection-color:black;
     selection-background-color: lightgray;
 }

QComboBox QAbstractItemView {
    border: 1px solid #141414;
    selection-background-color: lightgray;
}

 QMenu {
     background-color: #FFFFFF; /* sets background of the menu */
     border: 0px solid black;
 }

 QMenu::item {
     /* sets background of menu item. set this to something non-transparent
         if you want menu color and menu item color to be different */
     background-color: transparent;
 }

 QMenu::item:selected { /* when user selects item using mouse or keyboard */
     background-color: #5b5a5b;
     color: white;
 }

 QSpinBox {
     /*padding-right: 15px; make room for the arrows */
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #3c3c3c, stop: 1 #262627);
    color: #e8e8e8;
     border: none;
     border-radius: 4px;
     /*border-width: 3;*/
}

QSpinBox::up-button {
    border: none;
}

QSpinBox::down-button {
    border: none;
}

QLineEdit {
    border: 1px solid #141414;
    border-radius: 4px;
    color: #e8e8e8;
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #3c3c3c, stop: 1 #262627);
    selection-background-color: #e8e8e8;
    selection-color: #000000;
}

QProgressBar {
    border: 1px solid #141414;
    border-radius: 4px;
    text-align: center;
 }


 QProgressBar::chunk {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #3c3c3c, stop: 1 #262627);
    width: 20px;
 }

QFrame, QLabel, QToolTip {
   color: #181818;
}


QPushButton {
   border: 1px solid #141414;
   border-radius: 4px;
   background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #3c3c3c, stop: 1 #262627);
    color: #e8e8e8;
}
QPushButton::hover {
   background-color: #5b5a5b;
}

QPushButton::disabled {
    color: #262627;
}

 QTabWidget::pane { /* The tab widget frame */
     border-top: 1px solid #141414;
     position: absolute;
     top: -0.5em;
 }

 QTabWidget::tab-bar {
     alignment: center;
 }

 /* Style the tab using the tab sub-control. Note that
     it reads QTabBar _not_ QTabWidget */
 QTabBar::tab {
 background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                   stop: 0 #3c3c3c, stop: 1 #262627);

    border: 1px solid #141414;

     /*border: 2px solid #C4C4C3;
     border-bottom-color: #C2C7CB; same as the pane color */
     border-top-left-radius: 4px;
     border-top-right-radius: 4px;
     min-width: 8ex;
     padding: 2px;
     color: #e8e8e8;
 }

 QTabBar::tab:selected, QTabBar::tab:hover {
     background: #5b5a5b;
 }

 QTabBar::tab:selected {
     border-color: #5b5a5b;
     color: #141414;
     /*border-bottom-color: #C2C7CB; same as pane color */
 }

 QSlider::groove:horizontal {
 border: 1px solid #141414;
     height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #3c3c3c, stop: 1 #262627);
     margin: 2px 0;
 }

 QSlider::handle:horizontal {
 background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                   stop: 0 #3c3c3c, stop: 1 #262627);     border: 1px solid #5c5c5c;
     width: 18px;
     /*margin: -2px 0;  handle is placed by default on the contents rect of the groove. Expand outside the groove */
     border-radius: 3px;
 }

  QScrollBar:vertical {
      border: 0px solid transparent;
      background: transparent;
      width: 4px;
      margin: 0px 0 0px 0;
  }
  QScrollBar::handle:vertical {
      background: #e8e8e8;
      min-height: 20px;
      border: 2px solid #e8e8e8;
      border-radius: 2px;
  }
  QScrollBar::add-line:vertical {
      border: 0px solid transparent;
      background: transparent;
      height: 0px;
      subcontrol-position: bottom;
      subcontrol-origin: margin;
  }

  QScrollBar::sub-line:vertical {
      border: 0px solid transparent;
      background: transparent;
      height: 0px;
      subcontrol-position: top;
      subcontrol-origin: margin;
  }
  QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
      border: 0px solid grey;
      width: 0px;
      height: 0px;
      background: white;
  }

  QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
  }

